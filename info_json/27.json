{
  "id": 27,
  "repo": "ibc-rs",
  "issue_url": "https://github.com/cosmos/ibc-rs/issues/1226",
  "pr_url": "https://github.com/cosmos/ibc-rs/pull/1267",
  "issue_description": "<!-- < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < \u263a\r\nv                \u2730  Thanks for opening an issue! \u2730\r\nv    Before smashing the submit button please review the template.\r\nv    Word of caution: poorly thought-out proposals may be rejected\r\nv                     without deliberation\r\n\u263a > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >  -->\r\n\r\n## Feature Summary\r\n\r\n<!-- Short description of the proposed feature -->\r\n\r\nThe current `ibc-rs` [release process](https://github.com/cosmos/ibc-rs/blob/main/RELEASES.md) is error-prone and flaky, especially on the `cargo release` step. This is in large part due to the 30-crate rate limit for existing sub-crates; `ibc-rs` now has more than that in its workspace. This requires us to first manually release leaf dependencies until we meet the 30-crate limit.\r\n\r\nAdditionally, with the most recent 0.53.0 release, the `ibc-testkit` crate failed to be published due to it depending on the `ibc-client-tendermint-cw` crate, however, this crate was excluded from publishing to crates.io. The rest of the sub-crates were successfully published, but these last two crates needed to be published manually in order to complete the release.\r\n\r\n## Proposal\r\n\r\n<!-- Provide a full description and requirements of the feature -->\r\n\r\n@romac suggested asking the crates.io maintainers about whether they can raise the 30 crate rate limit for `ibc-rs`. Are there perhaps other ways to get around this issue that we could look into?\r\n",
  "files_changed": [
    {
      "filename": "RELEASES.md",
      "status": "modified",
      "patch": "@@ -4,14 +4,14 @@ Our release process is as follows:\n \n 1. In a new branch `release/vX.Y.Z`, update the [changelog](./CHANGELOG.md) to\n    reflect and summarize all changes in the release. This involves:\n-   1. Running `unclog build -u` and copy pasting the output at the top of the\n+   1. Running `unclog build -u` and copy-pasting the output at the top of the\n       `CHANGELOG.md` file, making sure to update the header with the new\n       version.\n    2. Running `unclog release --editor <editor> vX.Y.Z` to create a summary of\n-      all of the changes in this release.\n+      all the changes in this release.\n       1. Your text editor will open. Write the release summary, and close the\n-         editor. Make sure to include a comment on whether or not the release\n-         contains consensus-breaking changes.\n+         editor. Make sure to include a comment on whether the release contains\n+         consensus-breaking changes.\n       2. Add this same summary to `CHANGELOG.md` as well.\n    3. Committing the updated `CHANGELOG.md` file and `.changelog` directory to\n       the repo.\n@@ -21,8 +21,8 @@ Our release process is as follows:\n    version of that crate.\n    1. bump the version in `crates/ibc-derive/Cargo.toml`\n    2. Publish `ibc-derive` with `cargo publish -p ibc-derive`\n-4. Bump the versions of all crates to the new version in their Cargo.toml and in\n-   the root `Cargo.toml` as well, and push these changes to the release PR.\n+4. Bump the versions of all crates to the new version in their `Cargo.toml` and\n+   in the root `Cargo.toml` as well, and push these changes to the release PR.\n    - If you released a new version of `ibc-derive` in step 3, make sure to\n      update that dependency.\n    - Verify that there is no dev-dependency among the workspace crates. This is\n@@ -35,28 +35,22 @@ Our release process is as follows:\n      ![alt test](docs/dev-deps-graph.png) The dev dependencies are colored with\n      blue arrows. Currently, there are no blue arrows, i.e. there is no dev\n      dependency among the IBC crates. It is advised to avoid any dev dependency\n-     because of release order complicacy (except maybe inside `ibc-testkit`, as\n-     it is the top crate that depends on `ibc` crate and no other crate depends\n-     on it).\n-   - In order to resolve such a situation, the dev dependencies other than\n-     `ibc-testkit` can be manually released to crates.io first so that the\n-     subsequent crates that depend on them can then be released via the release\n-     process. For instructions on how to release a crate on crates.io, refer\n-     [here](https://doc.rust-lang.org/cargo/reference/publishing.html).\n-5. Beware of [crates-io rate limit][cargo-release-rate-limit]. It is 5 for\n-   publishing new crates and 30 for publishing existing crates. But the number\n-   of our crates has reached 31. So we publish a leaf crate, `ibc-primitives`\n-   manually and release the rest of the 30 crates via CI.\n-   - Release `ibc-primitives` by running:\n-   ```sh\n-   cargo release -p ibc-primitives --no-push --no-tag --allow-branch main --execute\n-   ```\n-   - Validate the number of crates that need to be released via CI, it can not\n-     be more than 30.\n-   - There should be a 10 minutes delay between the release of `ibc-primitives`\n-     and the release of the rest of the crates on CI.\n-   - If new crates are added, we need to recompute the set of crates that we\n-     want to release via CI. The rest must be released manually.\n+     because of release order complication (except maybe inside `ibc-testkit`,\n+     as it is the top crate that depends on `ibc` crate and no other crate\n+     depends on it).\n+   - To resolve such a situation, the dev dependencies other than `ibc-testkit`\n+     can be manually released to crates.io first so that the subsequent crates\n+     that depend on them can then be released via the release process. For\n+     instructions on how to release a crate on crates.io, refer\n+     [here][publishing].\n+5. Validate the number of new and existing crates that need to be released via\n+   CI.\n+   1. crates.io imposes a [rate limit][crates-io-rate-limit] of publishing 1\n+      crate per minute after a burst of 10 crates.\n+   2. Also, [`cargo-release`][cargo-release-rate-limit] rejects publishing more\n+      than 5 new crates or 30 existing crates by default. If we need to publish\n+      more than these limits, we need to update `release.toml` at workspace\n+      root.\n 6. Run `cargo doc -p ibc --all-features --open` locally to double-check that all\n    the documentation compiles and seems up-to-date and coherent. Fix any\n    potential issues here and push them to the release PR.\n@@ -75,7 +69,7 @@ Our release process is as follows:\n        locally to publish any missing crates from this release. This step\n        requires the appropriate privileges to push crates to [crates.io].\n     2. If there is any new crate published locally, add\n-       [ibcbot](https://crates.io/users/ibcbot) to its owners list.\n+       [ibcbot](https://crates.io/users/ibcbot) to its owners' list.\n     3. In case problems arise from the source files, fix them, bump a new patch\n        version (e.g. `v0.48.1`) and repeat the process with its corresponding\n        new tag.\n@@ -94,4 +88,6 @@ All done! \ud83c\udf89\n \n [crates.io]: https://crates.io\n [release.yaml]: https://github.com/cosmos/ibc-rs/blob/main/.github/workflows/release.yaml\n-[cargo-release-rate-limit]: https://github.com/crate-ci/cargo-release/blob/4b09269/src/steps/mod.rs#L214-L268\n+[crates-io-rate-limit]: https://github.com/rust-lang/crates.io/pull/1596\n+[cargo-release-rate-limit]: https://github.com/crate-ci/cargo-release/blob/54ad949/src/config.rs#L493-L498\n+[publishing]: https://doc.rust-lang.org/cargo/reference/publishing.html"
    },
    {
      "filename": "release.toml",
      "status": "added",
      "patch": "@@ -0,0 +1,3 @@\n+# specifies the rate limit for cargo-release when publishing existing packages\n+# default value: { new-packages = 5, existing-packages = 30 }\n+rate-limit = { existing-packages = 40 }"
    }
  ],
  "fix_category": NaN,
  "root_cause_category": NaN,
  "root_cause_subcategory": "!Rust (CI)"
}