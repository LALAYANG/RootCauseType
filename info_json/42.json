{
  "id": 42,
  "repo": "greptimedb",
  "issue_url": "https://github.com/GreptimeTeam/greptimedb/issues/441",
  "pr_url": "https://github.com/GreptimeTeam/greptimedb/pull/446",
  "issue_description": "nextest (https://nexte.st/) is a test runner, compare to the default one (`cargo test`), it can\r\n- speed up test running time. In my local env `cargo nextest run` takes ~12s and `cargo run` takes ~1min\r\n- able to set timeout for slow cases https://nexte.st/book/slow-tests.html#slow-tests \r\n- build-in retry https://nexte.st/book/retries.html#retries-and-flaky-tests (not sure if we do need to enable this)\r\n- beautiful UI (in terminal)",
  "files_changed": [
    {
      "filename": ".config/nextest.toml",
      "status": "added",
      "patch": "@@ -0,0 +1,2 @@\n+[profile.default]\n+slow-timeout = { period = \"60s\", terminate-after = 3, grace-period = \"30s\" }"
    },
    {
      "filename": ".github/workflows/coverage.yml",
      "status": "modified",
      "patch": "@@ -18,24 +18,25 @@ jobs:\n     runs-on: ubuntu-latest\n     timeout-minutes: 60\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: actions/checkout@v3\n       - uses: arduino/setup-protoc@v1\n       - name: Install toolchain\n-        uses: actions-rs/toolchain@v1\n+        uses: dtolnay/rust-toolchain@master\n         with:\n           toolchain: ${{ env.RUST_TOOLCHAIN }}\n-          override: true\n           components: llvm-tools-preview\n       - name: Rust Cache\n-        uses: Swatinem/rust-cache@v2.0.0\n+        uses: Swatinem/rust-cache@v2\n       - name: Cleanup disk\n         uses: curoky/cleanup-disk-action@v2.0\n         with:\n           retain: 'rust'\n+      - name: Install latest nextest release\n+        uses: taiki-e/install-action@nextest\n       - name: Install cargo-llvm-cov\n         uses: taiki-e/install-action@cargo-llvm-cov\n       - name: Collect coverage data\n-        run: cargo llvm-cov --lcov --output-path lcov.info\n+        run: cargo llvm-cov nextest --workspace --lcov --output-path lcov.info\n         env:\n           RUST_BACKTRACE: 1\n           CARGO_INCREMENTAL: 0"
    },
    {
      "filename": ".github/workflows/develop.yml",
      "status": "modified",
      "patch": "@@ -27,27 +27,23 @@ jobs:\n     runs-on: ubuntu-latest\n     timeout-minutes: 60\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: actions/checkout@v3\n       - uses: arduino/setup-protoc@v1\n-      - uses: actions-rs/toolchain@v1\n+      - uses: dtolnay/rust-toolchain@master\n         with:\n-          profile: minimal\n           toolchain: ${{ env.RUST_TOOLCHAIN }}\n-          override: true\n       - name: Rust Cache\n-        uses: Swatinem/rust-cache@v2.0.0\n-      - uses: actions-rs/cargo@v1\n-        with:\n-          command: check\n-          args: --workspace --all-targets\n+        uses: Swatinem/rust-cache@v2\n+      - name: Run cargo check\n+        run: cargo check --workspace --all-targets\n \n   test:\n     name: Test Suite\n     if: github.event.pull_request.draft == false\n     runs-on: ubuntu-latest\n     timeout-minutes: 60\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: actions/checkout@v3\n       - name: Cache LLVM and Clang\n         id: cache-llvm\n         uses: actions/cache@v3\n@@ -59,21 +55,19 @@ jobs:\n         with:\n           version: \"14.0\"\n           cached: ${{ steps.cache-llvm.outputs.cache-hit }}\n-      - uses: actions-rs/toolchain@v1\n+      - uses: dtolnay/rust-toolchain@master\n         with:\n-          profile: minimal\n           toolchain: ${{ env.RUST_TOOLCHAIN }}\n-          override: true\n       - name: Rust Cache\n-        uses: Swatinem/rust-cache@v2.0.0\n+        uses: Swatinem/rust-cache@v2\n       - name: Cleanup disk\n         uses: curoky/cleanup-disk-action@v2.0\n         with:\n           retain: 'rust,llvm'\n-      - uses: actions-rs/cargo@v1\n-        with:\n-          command: test\n-          args: --workspace\n+      - name: Install latest nextest release\n+        uses: taiki-e/install-action@nextest\n+      - name: Run tests\n+        run: cargo nextest run\n         env:\n           CARGO_BUILD_RUSTFLAGS: \"-C link-arg=-fuse-ld=lld\"\n           RUST_BACKTRACE: 1\n@@ -88,38 +82,30 @@ jobs:\n     runs-on: ubuntu-latest\n     timeout-minutes: 60\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: actions/checkout@v3\n       - uses: arduino/setup-protoc@v1\n-      - uses: actions-rs/toolchain@v1\n+      - uses: dtolnay/rust-toolchain@master\n         with:\n-          profile: minimal\n           toolchain: ${{ env.RUST_TOOLCHAIN }}\n-          override: true\n+          components: rustfmt\n       - name: Rust Cache\n-        uses: Swatinem/rust-cache@v2.0.0\n-      - run: rustup component add rustfmt\n-      - uses: actions-rs/cargo@v1\n-        with:\n-          command: fmt\n-          args: --all -- --check\n+        uses: Swatinem/rust-cache@v2\n+      - name: Run cargo fmt\n+        run: cargo fmt --all -- --check\n \n   clippy:\n     name: Clippy\n     if: github.event.pull_request.draft == false\n     runs-on: ubuntu-latest\n     timeout-minutes: 60\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: actions/checkout@v3\n       - uses: arduino/setup-protoc@v1\n-      - uses: actions-rs/toolchain@v1\n+      - uses: dtolnay/rust-toolchain@master\n         with:\n-          profile: minimal\n           toolchain: ${{ env.RUST_TOOLCHAIN }}\n-          override: true\n+          components: clippy\n       - name: Rust Cache\n-        uses: Swatinem/rust-cache@v2.0.0\n-      - run: rustup component add clippy\n-      - uses: actions-rs/cargo@v1\n-        with:\n-          command: clippy\n-          args: --workspace --all-targets -- -D warnings -D clippy::print_stdout -D clippy::print_stderr\n+        uses: Swatinem/rust-cache@v2\n+      - name: Run cargo clippy\n+        run: cargo clippy --workspace --all-targets -- -D warnings -D clippy::print_stdout -D clippy::print_stderr"
    },
    {
      "filename": ".github/workflows/release.yml",
      "status": "modified",
      "patch": "@@ -63,22 +63,17 @@ jobs:\n           sudo apt-get -y update\n           sudo apt-get -y install libssl-dev pkg-config g++-aarch64-linux-gnu gcc-aarch64-linux-gnu\n \n-      - name: Install stable toolchain\n-        uses: actions-rs/toolchain@v1\n+      - name: Install rust toolchain\n+        uses: dtolnay/rust-toolchain@master\n         with:\n-          profile: minimal\n           toolchain: ${{ env.RUST_TOOLCHAIN }}\n-          override: true\n-          target: ${{ matrix.arch }}\n+          targets: ${{ matrix.arch }}\n \n       - name: Output package versions\n         run: protoc --version ; cargo version ; rustc --version ; gcc --version ; g++ --version\n \n       - name: Run cargo build\n-        uses: actions-rs/cargo@v1\n-        with:\n-          command: build\n-          args: ${{ matrix.opts }} --release --locked --target ${{ matrix.arch }}\n+        run: cargo build ${{ matrix.opts }} --release --locked --target ${{ matrix.arch }}\n \n       - name: Calculate checksum and rename binary\n         shell: bash\n@@ -122,7 +117,7 @@ jobs:\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout sources\n-        uses: actions/checkout@v2\n+        uses: actions/checkout@v3\n \n       - name: Download amd64 binary\n         uses: actions/download-artifact@v3"
    }
  ],
  "fix_category": NaN,
  "root_cause_category": NaN,
  "root_cause_subcategory": "!Rust (CI)"
}